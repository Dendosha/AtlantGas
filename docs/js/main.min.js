/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "ymaps3":
/*!*******************************************************************************************************************!*\
  !*** external ["https://api-maps.yandex.ru/v3/?apikey=cc838777-989c-4721-a5f1-daa7532b3925&lang=ru_RU","ymaps3"] ***!
  \*******************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var __webpack_error__ = new Error();
module.exports = new Promise((resolve, reject) => {
	if(typeof ymaps3 !== "undefined") return resolve();
	__webpack_require__.l("https://api-maps.yandex.ru/v3/?apikey=cc838777-989c-4721-a5f1-daa7532b3925&lang=ru_RU", (event) => {
		if(typeof ymaps3 !== "undefined") return resolve();
		var errorType = event && (event.type === 'load' ? 'missing' : event.type);
		var realSrc = event && event.target && event.target.src;
		__webpack_error__.message = 'Loading script failed.\n(' + errorType + ': ' + realSrc + ')';
		__webpack_error__.name = 'ScriptExternalLoadError';
		__webpack_error__.type = errorType;
		__webpack_error__.request = realSrc;
		reject(__webpack_error__);
	}, "ymaps3");
}).then(() => (ymaps3));

/***/ }),

/***/ "./src/js/blocks/footer.js":
/*!*********************************!*\
  !*** ./src/js/blocks/footer.js ***!
  \*********************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

var ymaps3__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var ymaps3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ymaps3 */ "ymaps3");
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([ymaps3__WEBPACK_IMPORTED_MODULE_0__]);
ymaps3__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];


async function initMap() {
	if (!document.getElementById('interactiveMap')) return

	await ymaps3__WEBPACK_IMPORTED_MODULE_0__.ready;

	const { YMapZoomControl, YMapGeolocationControl } = await ymaps3__WEBPACK_IMPORTED_MODULE_0__["import"]('@yandex/ymaps3-controls@0.0.1');
	const { YMap, YMapDefaultSchemeLayer, YMapDefaultFeaturesLayer, YMapControls, YMapMarker, YMapControlButton } = /*#__PURE__*/ (ymaps3__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (ymaps3__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(ymaps3__WEBPACK_IMPORTED_MODULE_0__, 2)));

	const map = new YMap(
		document.getElementById('interactiveMap'),
		{
			location: {
				center: [37.772638, 55.547507],
				zoom: 16
			},
			showScaleInCopyrights: true,
			behaviors: ['drag', 'pinchZoom', 'mouseTilt'],
			zoomRange: { min: 14, max: 21 },
		},
		[
			new YMapDefaultSchemeLayer({}),
			new YMapDefaultFeaturesLayer({}),
		]
	);

	const controls = new YMapControls({ position: 'top left', orientation: 'vertical' });

	const gotoSelectedLocationElement = document.createElement('img')
	gotoSelectedLocationElement.classList.add('map__control')
	gotoSelectedLocationElement.src = 'img/favicon.svg'

	function gotoSelectedLocationButtonHandler() {
		map.setLocation({
			center: [37.772638, 55.547507],
		})
	}

	const gotoSelectedLocationButton = new YMapControlButton({
		element: gotoSelectedLocationElement,
		onClick: gotoSelectedLocationButtonHandler,
	})

	controls.addChild(new YMapZoomControl({}))
	controls.addChild(new YMapGeolocationControl({}))
	controls.addChild(gotoSelectedLocationButton)

	const markerElement = document.createElement('img')
	markerElement.classList.add('map__location-icon')
	markerElement.src = 'img/icons/location.svg'

	map.addChild(controls);
	map.addChild(new YMapMarker({ coordinates: [37.772638, 55.547507] }, markerElement))
}

initMap()
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ "./src/js/blocks/header.js":
/*!*********************************!*\
  !*** ./src/js/blocks/header.js ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./src/js/libs/a11y-tabs/a11yTabs.js":
/*!*******************************************!*\
  !*** ./src/js/libs/a11y-tabs/a11yTabs.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
class Tabs {
	#defaultOptions = {
		activation: 'auto', // auto | manual
		prevKey: 'ArrowLeft',
		nextKey: 'ArrowRight',
		openTabCallback: null,
	}

	constructor(element, options) {
		this.element = element
		this.options = { ...this.#defaultOptions, ...options }

		this.#setup()
	}

	#setup() {
		this.tabPanelsWrapper = this.element.querySelector('[data-tabs="tabpanels"]')
		this.tabPanels = this.element.querySelectorAll('[data-tabs="tabpanels"]>div')

		this.tabPresentations = this.element.querySelectorAll('ul[data-tabs="tablist"]>li')
		this.tabs = this.element.querySelectorAll('ul[data-tabs="tablist"]>li>a')

		this.currentTab = this.tabs[0]
		this.currentTabpanel = this.tabPanels[0]

		this.#addAccessibility()

		this.clickHandler = this.clickHandler.bind(this)
		this.keydownHandler = this.keydownHandler.bind(this)

		this.element.addEventListener('click', this.clickHandler)
		this.element.addEventListener('keydown', this.keydownHandler)
	}

	#addAccessibility() {
		this.tabs.forEach((tab, index) => {
			tab.setAttribute('role', 'tab')
			this.tabPresentations[index].setAttribute('role', 'presentation')
			this.tabPanels[index].setAttribute('role', 'tabpanel')
			this.tabPanels[index].setAttribute('tabindex', '0')

			if (index === 0) {
				tab.setAttribute('tabindex', '0')
				tab.setAttribute('aria-selected', 'true')
			} else {
				tab.setAttribute('tabindex', '-1')
				tab.setAttribute('aria-selected', 'false')
				this.tabPanels[index].setAttribute('hidden', '')
			}
		})
	}

	clickHandler(e) {
		if (e.target.closest('[role="tab"]')) {
			e.preventDefault()
			this.openTab(e.target.closest('[role="tab"]'))
		}
	}

	keydownHandler(e) {
		const tab = e.target.closest('[role="tab"]')
		if (!tab) return

		const tabIndex = Array.from(this.tabs).findIndex(value => value === tab)

		switch (e.key) {
			case this.options.prevKey:
				e.preventDefault()
				if (this.tabPanels[tabIndex].previousElementSibling) {
					this.selectTab(this.tabPresentations[tabIndex].previousElementSibling.children[0])
				} else {
					this.selectTab(this.tabPresentations[this.tabPresentations.length - 1].children[0])
				}
				break

			case this.options.nextKey:
				e.preventDefault()
				if (this.tabPanels[tabIndex].nextElementSibling) {
					this.selectTab(this.tabPresentations[tabIndex].nextElementSibling.children[0])
				} else {
					this.selectTab(this.tabPresentations[0].children[0])
				}
				break

			case 'Home':
				e.preventDefault()
				this.selectTab(this.tabPresentations[0].children[0])
				break

			case 'End':
				e.preventDefault()
				this.selectTab(this.tabPresentations[this.tabPresentations.length - 1].children[0])
				break

			case 'Enter':
			case ' ':
				if (this.options.activation === 'manual') {
					e.preventDefault()
					this.openTab(e.target)
				}
				break

			case 'Tab':
				if (this.options.activation === 'manual') {
					if (tab.getAttribute('aria-selected') !== 'true') {
						e.preventDefault()
						this.currentTab.focus()
					}
				}
				break
		}
	}

	selectTab(newTab) {
		if (this.options.activation === 'auto') {
			this.openTab(newTab)
		} else {
			newTab.focus()
		}
	}

	openTab(newTab) {
		const newTabPanel = this.tabPanelsWrapper.querySelector(newTab.getAttribute('href'))

		this.currentTab.setAttribute('tabindex', '-1')
		this.currentTab.setAttribute('aria-selected', 'false')
		this.currentTabpanel.setAttribute('hidden', '')

		newTab.setAttribute('tabindex', '0')
		newTab.setAttribute('aria-selected', 'true')
		newTabPanel.removeAttribute('hidden')

		newTab.focus()

		this.currentTab = newTab
		this.currentTabpanel = newTabPanel

		if (this.options.openTabCallback) this.options.openTabCallback()
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Tabs);

/***/ }),

/***/ "./src/js/libs/modal-window/modalWindow.js":
/*!*************************************************!*\
  !*** ./src/js/libs/modal-window/modalWindow.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
class ModalWindow {
	static #all = []

	#defaultOptions = {
		state: 'closed',
		closeButtonSelector: '[data-close-button]',
		openButtonSelector: null,
		openCallback: null,
		closeCallback: null,
	}

	#focusElements = [
		'a[href]',
		'area[href]',
		'input:not([disabled]):not([type="hidden"]):not([aria-hidden])',
		'select:not([disabled]):not([aria-hidden])',
		'textarea:not([disabled]):not([aria-hidden])',
		'button:not([disabled]):not([aria-hidden])',
		'iframe',
		'object',
		'embed',
		'[contenteditable]',
		'[tabindex]:not([tabindex^="-"])'
	]

	constructor(element, options) {
		this.element = element
		this.options = { ...this.#defaultOptions, ...options }
		this.modalOpeners = []

		ModalWindow.#all.push(this)

		this.#setup()
	}

	static get all() {
		return this.#all
	}

	addModalOpener(modalOpener) {
		this.modalOpeners.push(modalOpener)

		modalOpener.addEventListener('click', this.open.bind(this))
	}

	#setup() {
		this.prepareToClose = false
		this.lastFocusedOpener = null
		this.focusableElements = Array.from(this.element.querySelectorAll(this.#focusElements))

		this.clickHandler = this.clickHandler.bind(this)
		this.mouseDownHandler = this.mouseDownHandler.bind(this)
		this.mouseUpHandler = this.mouseUpHandler.bind(this)
		this.keydownHandler = this.keydownHandler.bind(this)

		this.element.addEventListener('click', this.clickHandler)
		this.element.addEventListener('mousedown', this.mouseDownHandler)
		this.element.addEventListener('mouseup', this.mouseUpHandler)
		this.element.addEventListener('keydown', this.keydownHandler)

		if (this.element.dataset?.state == 'opened') this.open()

		document.querySelectorAll(this.options.openButtonSelector)?.forEach(this.addModalOpener.bind(this))
	}

	clickHandler(e) {
		if (e.target.closest(this.options.closeButtonSelector)) this.close()
	}

	mouseDownHandler(e) {
		if (!e.target.closest('[role="dialog"]')) this.prepareToClose = true
	}

	mouseUpHandler(e) {
		if (this.prepareToClose && !e.target.closest('[role="dialog"]')) {
			this.close()
		}
		this.prepareToClose = false
	}

	keydownHandler(e) {
		if (e.code == 'Escape') this.close()

		if (e.code === 'Tab') {
			const focusedElementIndex = this.focusableElements.indexOf(document.activeElement)

			if (e.shiftKey && focusedElementIndex === 0) {
				this.focusableElements[this.focusableElements.length - 1].focus()
				e.preventDefault()
			}

			if (!e.shiftKey && focusedElementIndex === this.focusableElements.length - 1) {
				this.focusableElements[0].focus()
				e.preventDefault()
			}
		}
	}

	open() {
		document.body.classList.add('--modal-opened')

		this.lastFocusedOpener = document.activeElement

		this.element.dataset.state = this.options.state = 'opened'
		this.element.setAttribute('aria-hidden', false)
		this.element.querySelectorAll(this.#focusElements)[0].focus()

		if (this.options.openCallback) {
			this.options.openCallback[0](...this.options.openCallback.slice(1))
		}
	}

	close() {
		document.body.classList.remove('--modal-opened')

		this.element.dataset.state = this.options.state = 'closed'
		this.element.setAttribute('aria-hidden', true)
		this.lastFocusedOpener?.focus();

		if (this.options.closeCallback) {
			this.options.closeCallback[0](...this.options.closeCallback.slice(1))
		}
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ModalWindow);

/***/ }),

/***/ "./src/js/libs/selectlist/selectlist.js":
/*!**********************************************!*\
  !*** ./src/js/libs/selectlist/selectlist.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
class SelectList {
	static #allSelectLists = new Map()
	#searchString = ''
	#searchTimeout
	#defaultOptions = {
		placeholder: 'Default placeholder',
		label: 'Custom selectlist',
		inputName: 'selectlistInput',
		selectlistItems: ['Option 1', 'Option 2', 'Option 3', 'Option 4'],
		visibleItemsCount: 4,
	}

	constructor(element, options) {
		this.element = element
		this.options = options

		if (!this.options.placeholder) this.options.placeholder = this.#defaultOptions.placeholder
		if (!this.options.label && !this.options.labelledby) this.options.label = this.#defaultOptions.label
		if (!this.options.selectlistItems?.filter(Boolean)?.length) this.options.selectlistItems = this.#defaultOptions.selectlistItems
		if (!this.options.visibleItemsCount) this.options.visibleItemsCount = this.#defaultOptions.visibleItemsCount
		if (!this.options.inputName) this.options.inputName = this.#defaultOptions.inputName

		const selectlistHTML = this.#render()

		SelectList.#allSelectLists.set(element, selectlistHTML)

		if (this.options.selectedItemIndex) this.select(`${this.options.listboxId}-${this.options.selectedItemIndex}`)

		this.#setup()
	}

	get isOpened() {
		return this.#html.combobox.getAttribute('aria-expanded') == 'true' ? true : false
	}

	get current() {
		const selectedItem = this.#html.listbox.querySelector('li[aria-selected="true"]')

		if (selectedItem) {
			return {
				selectedItem,
				value: selectedItem.innerText,
			}
		} else return
	}

	get #html() {
		return SelectList.#allSelectLists.get(this.element)
	}

	static get all() {
		const allInstances = []
		for (let value of this.#allSelectLists.values()) {
			allInstances.push(value.classInstance)
		}

		return allInstances
	}

	static find(searchParameter) {
		if (this.#allSelectLists.get(searchParameter)) return this.#allSelectLists.get(searchParameter).classInstance

		for (let key of this.#allSelectLists.keys()) {
			if (key?.id == searchParameter) return this.#allSelectLists.get(key).classInstance
		}
	}

	#render() {
		const input = document.createElement('input')
		input.type = 'text'
		input.ariaHidden = true
		input.tabIndex = -1
		input.name = this.options.inputName
		input.classList.add('--visually-hidden')

		const combobox = document.createElement('div')
		combobox.innerText = this.options.placeholder
		combobox.tabIndex = 0
		combobox.role = 'combobox'
		if (this.options.label) combobox.setAttribute('aria-label', this.options.label)
		if (this.options.labelledby) combobox.setAttribute('aria-labelledby', this.options.labelledby)
		combobox.ariaHasPopup = 'listbox'
		combobox.ariaExpanded = false
		combobox.classList.add('--selectlist__combobox')

		const listboxWrapper = document.createElement('div')
		listboxWrapper.classList.add('--selectlist__listbox-wrapper')

		const listbox = document.createElement('ul')
		listbox.id = this.options?.listboxId
		listbox.role = 'listbox'
		listbox.classList.add('--selectlist__listbox')

		this.options.selectlistItems.forEach((item, index) => {
			const selectlistItem = document.createElement('li')
			selectlistItem.innerText = item
			selectlistItem.id = `${this.options.selectlistItemsIdPrefix || this.options.listboxId}-${index}`
			selectlistItem.role = 'option'
			selectlistItem.setAttribute('aria-selected', false)
			selectlistItem.classList.add('--selectlist__option')

			listbox.append(selectlistItem)
		})

		const elementAttributes = Array.from(this.element.attributes)
		elementAttributes.forEach(attribute => {
			if (attribute.name.startsWith('data-')) this.element.removeAttribute(attribute.name)
		})

		this.element.append(input)
		this.element.append(combobox)
		this.element.append(listboxWrapper)
		listboxWrapper.append(listbox)

		const visibleItemsCount = this.options.visibleItemsCount
		const firstItem = listbox.firstChild
		const itemHeight = firstItem.offsetHeight
		const listboxBlockBordersWidth = parseInt(getComputedStyle(listbox).borderTopWidth) + parseInt(getComputedStyle(listbox).borderBottomWidth)

		listbox.style.maxHeight = `${itemHeight * visibleItemsCount + listboxBlockBordersWidth}px`
		if (listbox.childElementCount <= visibleItemsCount) {
			listbox.style.overflowY = 'hidden'
		}

		return {
			classInstance: this,
			input,
			combobox,
			listboxWrapper,
			listbox
		}
	}

	#setup() {
		this.comboboxKeydownHandler = this.comboboxKeydownHandler.bind(this)
		this.comboboxKeypressHandler = this.comboboxKeypressHandler.bind(this)
		this.comboboxClickHandler = this.comboboxClickHandler.bind(this)
		this.comboboxBlurHandler = this.comboboxBlurHandler.bind(this)
		this.optionsClickHandler = this.optionsClickHandler.bind(this)

		this.#html.combobox.addEventListener('keydown', this.comboboxKeydownHandler)
		this.#html.combobox.addEventListener('keypress', this.comboboxKeypressHandler)
		this.#html.combobox.addEventListener('click', this.comboboxClickHandler)
		this.#html.combobox.addEventListener('blur', this.comboboxBlurHandler)
		this.#html.listboxWrapper.addEventListener('mousedown', this.optionsClickHandler)
	}

	comboboxClickHandler(e) {
		if (e.currentTarget.getAttribute('aria-expanded') == 'false') this.open()
		else this.close()
	}

	comboboxBlurHandler(e) {
		this.close()
	}

	comboboxKeydownHandler(e) {
		const selectedItem = this.current?.selectedItem

		switch (e.code) {
			case 'Enter':
			case 'Space':
				this.isOpened ? this.close() : this.open()
				break
			case 'ArrowDown':
				if (!this.isOpened) {
					this.open()
					if (!selectedItem) this.select(this.#html.listbox.firstChild.id)
					this.#html.listbox.scrollTop = 0
				}
				else if (!selectedItem) this.select(this.#html.listbox.firstChild.id)
				else if (selectedItem?.nextElementSibling) this.select(selectedItem.nextElementSibling.id)
				break
			case 'ArrowUp':
				if (!this.isOpened) {
					this.open()
					if (!selectedItem) this.select(this.#html.listbox.firstChild.id)
					this.#html.listbox.scrollTop = 0
				} else {
					if (e.altKey) this.close()
					else if (!selectedItem) this.select(this.#html.listbox.firstChild.id)
					else if (selectedItem?.previousElementSibling) this.select(selectedItem.previousElementSibling.id)
				}
				break
			case 'Home':
				if (!this.isOpened) this.open()
				this.select(this.#html.listbox.firstChild.id)
				this.#html.listbox.scrollTop = 0
				break
			case 'End':
				if (!this.isOpened) this.open()
				this.select(this.#html.listbox.lastChild.id)
				this.#html.listbox.scrollTop = this.#html.listbox.scrollHeight
				break
			case 'Escape':
				if (this.isOpened) {
					e.stopPropagation()
					this.close()
				}
				break
		}
	}

	comboboxKeypressHandler(e) {
		if (this.#searchTimeout) clearTimeout(this.#searchTimeout)
		this.#searchTimeout = setTimeout(() => this.#searchString = '', 400)
		this.#searchString += e.key

		for (let listItem of this.#html.listbox.querySelectorAll('li[role="option"]')) {
			if (listItem.innerText.toLowerCase().startsWith(this.#searchString.toLowerCase())) {
				this.select(listItem.id)
				break
			}
		}
	}

	optionsClickHandler(e) {
		if (e.target.tagName !== 'LI') return

		this.select(e.target.id)
	}

	open() {
		this.#html.combobox.setAttribute('aria-expanded', true)
		this.#html.combobox.setAttribute('aria-controls', this.#html.listbox.id)

		const selectedItem = this.#html.listbox.querySelector('li[aria-selected="true"]')
		if (selectedItem) this.#html.combobox.setAttribute('aria-activedescendant', selectedItem.id)
	}

	close() {
		this.#html.combobox.setAttribute('aria-expanded', false)
		this.#html.combobox.removeAttribute('aria-controls')
		this.#html.combobox.removeAttribute('aria-activedescendant')
	}

	select(id) {
		const selectedItem = document.getElementById(id)
		if (!selectedItem) return

		this.#html.listbox.querySelector('li[aria-selected="true"]')?.setAttribute('aria-selected', false)
		selectedItem.setAttribute('aria-selected', true)

		this.#html.input.value = this.#html.combobox.innerText = selectedItem.textContent

		if (selectedItem.offsetTop + selectedItem.offsetHeight > this.#html.listbox.clientHeight + this.#html.listbox.scrollTop) {
			selectedItem.scrollIntoView({ block: 'end', behavior: "smooth" })
		} else if (selectedItem.offsetTop < this.#html.listbox.scrollTop) {
			selectedItem.scrollIntoView({ block: 'start', behavior: "smooth" })
		}
	}

	destroy() {
		this.#html.combobox.removeEventListener('keydown', this.comboboxKeydownHandler)
		this.#html.combobox.removeEventListener('keydown', this.comboboxKeypressHandler)
		this.#html.combobox.removeEventListener('click', this.comboboxClickHandler)
		this.#html.combobox.removeEventListener('blur', this.comboboxBlurHandler)
		this.#html.listboxWrapper.removeEventListener('mousedown', this.optionsClickHandler)

		this.element.remove()
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SelectList);


/***/ }),

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _libs_selectlist_selectlist_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./libs/selectlist/selectlist.js */ "./src/js/libs/selectlist/selectlist.js");
/* harmony import */ var _libs_a11y_tabs_a11yTabs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./libs/a11y-tabs/a11yTabs.js */ "./src/js/libs/a11y-tabs/a11yTabs.js");
/* harmony import */ var _libs_modal_window_modalWindow_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./libs/modal-window/modalWindow.js */ "./src/js/libs/modal-window/modalWindow.js");
/* harmony import */ var _blocks_header_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./blocks/header.js */ "./src/js/blocks/header.js");
/* harmony import */ var _blocks_footer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./blocks/footer.js */ "./src/js/blocks/footer.js");
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_blocks_footer_js__WEBPACK_IMPORTED_MODULE_4__]);
_blocks_footer_js__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];
// ===== Custom select =====


// ===== Usage =====
const selectLists = document.querySelectorAll('[data-custom-element="selectlist"]')

selectLists.forEach(element => {
	const options = {
		placeholder: element.dataset?.placeholder,
		label: element.dataset?.label,
		listboxId: element.dataset.listboxId,
		inputName: element.dataset?.inputName,
		selectlistItems: element.dataset?.selectlistItems?.split(/;\s*/g),
		selectlistItemsIdPrefix: element.dataset?.itemsIdPrefix,
		selectedItemIndex: element.dataset?.selectedItemIndex,
		visibleItemsCount: 4,
	}

	new _libs_selectlist_selectlist_js__WEBPACK_IMPORTED_MODULE_0__["default"](element, options)
})



// Tabs
;

const pageTabs = document.querySelectorAll('[data-tabs="tabs"]')
pageTabs.forEach(tabs => {
	new _libs_a11y_tabs_a11yTabs_js__WEBPACK_IMPORTED_MODULE_1__["default"](tabs, {
		openTabCallback: function () {
			if (tabs !== document.querySelector('.gas-volume-selection')) return

			const gasVolumesSelectList = _libs_selectlist_selectlist_js__WEBPACK_IMPORTED_MODULE_0__["default"].find(document.getElementById('order-form-selectlist'))
			const gasVolumesTabs = document.querySelectorAll('.gas-volumes a[role="tab"]')

			for (let i = 0; i < gasVolumesTabs.length; i++) {
				if (gasVolumesTabs[i].getAttribute('aria-selected') === 'true') {
					gasVolumesSelectList.select(`gas-volumes-listbox-${i}`)
					break
				}
			}
		},
	})
})



// ===== Modal window =====
;

// ===== Usage =====
const modals = document.querySelectorAll('[data-custom-element="dialog"]')

modals.forEach(element => {
	const options = {
		state: element.dataset.state ?? 'closed',
		closeButtonSelector: '[data-close-button]',
		openButtonSelector: `[data-modal-open = ${element.id}]`,
	}

	new _libs_modal_window_modalWindow_js__WEBPACK_IMPORTED_MODULE_2__["default"](element, options)
})



// Active elements handler
const activatableElements = Array.from(document.querySelectorAll('button, a'))

document.documentElement.addEventListener('pointerdown', handleElementActivation)
document.documentElement.addEventListener('pointerup', handleElementActivation)
document.documentElement.addEventListener('pointerout', handleElementActivation)

function handleElementActivation(e) {
	const activatableElement = e.target.closest('button, a')

	if (e.type === 'pointerout' && activatableElement) {
		activatableElement.classList.remove('--active')
	}

	if (activatableElements.includes(activatableElement)) {
		if (e.type === 'pointerdown') {
			activatableElement.classList.add('--active')
		} else if (e.type === 'pointerup') {
			activatableElement.classList.remove('--active')
		}
	}
}



// Header script


// Footer script


// Other scripts
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/async module */
/******/ 	(() => {
/******/ 		var webpackQueues = typeof Symbol === "function" ? Symbol("webpack queues") : "__webpack_queues__";
/******/ 		var webpackExports = typeof Symbol === "function" ? Symbol("webpack exports") : "__webpack_exports__";
/******/ 		var webpackError = typeof Symbol === "function" ? Symbol("webpack error") : "__webpack_error__";
/******/ 		var resolveQueue = (queue) => {
/******/ 			if(queue && queue.d < 1) {
/******/ 				queue.d = 1;
/******/ 				queue.forEach((fn) => (fn.r--));
/******/ 				queue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));
/******/ 			}
/******/ 		}
/******/ 		var wrapDeps = (deps) => (deps.map((dep) => {
/******/ 			if(dep !== null && typeof dep === "object") {
/******/ 				if(dep[webpackQueues]) return dep;
/******/ 				if(dep.then) {
/******/ 					var queue = [];
/******/ 					queue.d = 0;
/******/ 					dep.then((r) => {
/******/ 						obj[webpackExports] = r;
/******/ 						resolveQueue(queue);
/******/ 					}, (e) => {
/******/ 						obj[webpackError] = e;
/******/ 						resolveQueue(queue);
/******/ 					});
/******/ 					var obj = {};
/******/ 					obj[webpackQueues] = (fn) => (fn(queue));
/******/ 					return obj;
/******/ 				}
/******/ 			}
/******/ 			var ret = {};
/******/ 			ret[webpackQueues] = x => {};
/******/ 			ret[webpackExports] = dep;
/******/ 			return ret;
/******/ 		}));
/******/ 		__webpack_require__.a = (module, body, hasAwait) => {
/******/ 			var queue;
/******/ 			hasAwait && ((queue = []).d = -1);
/******/ 			var depQueues = new Set();
/******/ 			var exports = module.exports;
/******/ 			var currentDeps;
/******/ 			var outerResolve;
/******/ 			var reject;
/******/ 			var promise = new Promise((resolve, rej) => {
/******/ 				reject = rej;
/******/ 				outerResolve = resolve;
/******/ 			});
/******/ 			promise[webpackExports] = exports;
/******/ 			promise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise["catch"](x => {}));
/******/ 			module.exports = promise;
/******/ 			body((deps) => {
/******/ 				currentDeps = wrapDeps(deps);
/******/ 				var fn;
/******/ 				var getResult = () => (currentDeps.map((d) => {
/******/ 					if(d[webpackError]) throw d[webpackError];
/******/ 					return d[webpackExports];
/******/ 				}))
/******/ 				var promise = new Promise((resolve) => {
/******/ 					fn = () => (resolve(getResult));
/******/ 					fn.r = 0;
/******/ 					var fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));
/******/ 					currentDeps.map((dep) => (dep[webpackQueues](fnQueue)));
/******/ 				});
/******/ 				return fn.r ? promise : getResult();
/******/ 			}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));
/******/ 			queue && queue.d < 0 && (queue.d = 0);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/create fake namespace object */
/******/ 	(() => {
/******/ 		var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);
/******/ 		var leafPrototypes;
/******/ 		// create a fake namespace object
/******/ 		// mode & 1: value is a module id, require it
/******/ 		// mode & 2: merge all properties of value into the ns
/******/ 		// mode & 4: return value when already ns object
/******/ 		// mode & 16: return value when it's Promise-like
/******/ 		// mode & 8|1: behave like require
/******/ 		__webpack_require__.t = function(value, mode) {
/******/ 			if(mode & 1) value = this(value);
/******/ 			if(mode & 8) return value;
/******/ 			if(typeof value === 'object' && value) {
/******/ 				if((mode & 4) && value.__esModule) return value;
/******/ 				if((mode & 16) && typeof value.then === 'function') return value;
/******/ 			}
/******/ 			var ns = Object.create(null);
/******/ 			__webpack_require__.r(ns);
/******/ 			var def = {};
/******/ 			leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];
/******/ 			for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {
/******/ 				Object.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));
/******/ 			}
/******/ 			def['default'] = () => (value);
/******/ 			__webpack_require__.d(ns, def);
/******/ 			return ns;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "gulp-template:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 		
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module used 'module' so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/main.js");
/******/ 	
/******/ })()
;
//# sourceMappingURL=main.min.js.map